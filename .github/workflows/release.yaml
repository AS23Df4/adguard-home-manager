name: Release build

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true
        default: "1.0.0"
      number:
        description: "Build number"
        required: true
        default: "1"
jobs:
  build-and-release-android:
    name: Build Android APK and AAB
    runs-on: ubuntu-latest
    env:
      ANDROID_AAB_RELEASE_PATH: build/app/outputs/bundle/release
      ANDROID_APK_RELEASE_PATH: build/app/outputs/apk/release
    steps:
      - uses: actions/checkout@v3
      - name: Decode android/app/keystore.jks
        run: echo "${{ secrets.KEYSTORE_JKS }}" | base64 --decode > android/app/keystore.jks
      - name: Decode android/key.properties
        run: echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > android/key.properties
      - name: Decode .env
        run: echo "${{ secrets.ENV }}" | base64 --decode > .env
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ github.event.inputs.version }}+${{ github.event.inputs.number }}/g' pubspec.yaml
      - name: Update KeyStore password in gradle properties
        run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' android/key.properties
      - name: Update KeyStore key password in gradle properties
        run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' android/key.properties
      - uses: actions/setup-java@v1
        with:
          java-version: "18.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter clean
      - run: flutter pub get
      - run: flutter build apk --release
      - run: flutter build appbundle --release
      - name: Rename apk 
        run: mv $ANDROID_APK_RELEASE_PATH/app-release.apk $ANDROID_APK_RELEASE_PATH/AdGuardHomeManager_${{ github.event.inputs.version }}_Android.apk
      - name: Rename aab 
        run: mv $ANDROID_AAB_RELEASE_PATH/app-release.aab $ANDROID_AAB_RELEASE_PATH/AdGuardHomeManager_${{ github.event.inputs.version }}_Android.aab
      - name: Copy apk to project root
        run: cp $ANDROID_APK_RELEASE_PATH/AdGuardHomeManager_${{ github.event.inputs.version }}_Android.apk AdGuardHomeManager_${{ github.event.inputs.version }}_Android.apk
      - name: Copy aab to project root
        run: cp $ANDROID_AAB_RELEASE_PATH/AdGuardHomeManager_${{ github.event.inputs.version }}_Android.aab AdGuardHomeManager_${{ github.event.inputs.version }}_Android.aab
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        draft: false
        prerelease: false
        name: v${{ github.event.inputs.version }}
        tag_name: ${{ github.event.inputs.version }}
        with:
          files: |
            AdGuardHomeManager_${{ github.event.inputs.version }}_Android.aab
            AdGuardHomeManager_${{ github.event.inputs.version }}_Android.apk
  build-and-release-macos:
    name: Build macOS
    runs-on: macos-latest
    env:
      MACOS_APP_RELEASE_PATH: build/macos/Build/Products/Release
    steps:
      - uses: actions/checkout@v3
      - name: Decode .env
        run: echo "${{ secrets.ENV }}" | base64 --decode > .env
      - name: Update version in YAML
        run: sed -i '' 's/99.99.99+99/${{ github.event.inputs.version }}+${{ github.event.inputs.number }}/g' pubspec.yaml
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter clean
      - run: flutter pub get
      - run: flutter build macos --release
      - name: Create folder to build dmg
        run: mkdir $MACOS_APP_RELEASE_PATH/AdGuard\ Home\ Manager
      - name: Copy app into folder
        run: cp -r $MACOS_APP_RELEASE_PATH/AdGuard\ Home\ Manager.app $MACOS_APP_RELEASE_PATH/AdGuard\ Home\ Manager/AdGuard\ Home\ Manager.app
      - name: Generate symbolic link to Applications dir
        run: ln -s /Applications $MACOS_APP_RELEASE_PATH/AdGuard\ Home\ Manager
      - name: Generate dmg
        run: hdiutil create -srcfolder $MACOS_APP_RELEASE_PATH/AdGuard\ Home\ Manager $MACOS_APP_RELEASE_PATH/AdGuardHomeManager_${{ github.event.inputs.version }}_macOS_Universal.dmg
      - name: Copy dmg to project root
        run: cp $MACOS_APP_RELEASE_PATH/AdGuardHomeManager_${{ github.event.inputs.version }}_macOS_Universal.dmg AdGuardHomeManager_${{ github.event.inputs.version }}_macOS_Universal.dmg
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        draft: false
        prerelease: false
        name: v${{ github.event.inputs.version }}
        tag_name: ${{ github.event.inputs.version }}
        with:
          files: AdGuardHomeManager_${{ github.event.inputs.version }}_macOS_Universal.dmg